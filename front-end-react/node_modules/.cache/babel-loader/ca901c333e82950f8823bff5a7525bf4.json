{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arihant\\\\Desktop\\\\git projects\\\\react-covid-tracker-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { async } from \"q\";\n\nconst getTotalValue = data => {\n  var total = 0;\n\n  for (let key in data) {\n    total = total + data[key];\n  }\n\n  return total;\n};\n\nconst App = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  const [revenueInfo, setRevenueInfo] = useState({});\n  const [customerInfo, setCustomerInfo] = useState({});\n  const [vendorInfo, setVendorInfo] = useState({});\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [region, setRegion] = useState([\"na\", \"sa\", \"europe\", \"africa\", \"apac\"]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/invoice/totalRevenue/region\").then(response => response.json()).then(data => {\n      setRevenueInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/customers/countOfCustomerBasedOnRegion\").then(response => response.json()).then(data => {\n      setCustomerInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/vendors/countOfVendorBasedOnRegion\").then(response => response.json()).then(data => {\n      setVendorInfo(data);\n    });\n  }, []);\n  console.log(revenueInfo);\n  console.log(customerInfo);\n  console.log(vendorInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Treasury Application\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"cases\"),\n    title: \"Revenue\",\n    isRed: true,\n    active: casesType === \"cases\",\n    cases: prettyPrintStat(getTotalValue(revenueInfo)),\n    total: numeral(getTotalValue(revenueInfo)).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"recovered\"),\n    title: \"Customers\",\n    active: casesType === \"recovered\",\n    cases: prettyPrintStat(getTotalValue(customerInfo)),\n    total: numeral(getTotalValue(customerInfo)).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"deaths\"),\n    title: \"Vendors\",\n    isRed: true,\n    active: casesType === \"deaths\",\n    cases: prettyPrintStat(getTotalValue(vendorInfo)),\n    total: numeral(getTotalValue(vendorInfo)).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    countries: mapCountries,\n    casesType: casesType,\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Revenue by Regions\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \" Revenue Chart \"), /*#__PURE__*/React.createElement(LineGraph, {\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Arihant/Desktop/git projects/react-covid-tracker-master/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","LineGraph","Table","sortData","prettyPrintStat","numeral","Map","async","getTotalValue","data","total","key","App","countryInfo","setCountryInfo","revenueInfo","setRevenueInfo","customerInfo","setCustomerInfo","vendorInfo","setVendorInfo","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","region","setRegion","fetch","then","response","json","console","log","e","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { async } from \"q\";\n\nconst getTotalValue = (data) => {\n  var total = 0;\n  for (let key in data) {\n    total = total + data[key];\n  }\n  return total;\n};\n\nconst App = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  const [revenueInfo, setRevenueInfo] = useState({});\n  const [customerInfo, setCustomerInfo] = useState({});\n  const [vendorInfo, setVendorInfo] = useState({});\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [region, setRegion] = useState([\n    \"na\",\n    \"sa\",\n    \"europe\",\n    \"africa\",\n    \"apac\",\n  ]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/invoice/totalRevenue/region\")\n      .then((response) => response.json())\n      .then((data) => {\n        setRevenueInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/customers/countOfCustomerBasedOnRegion\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCustomerInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/vendors/countOfVendorBasedOnRegion\")\n      .then((response) => response.json())\n      .then((data) => {\n        setVendorInfo(data);\n      });\n  }, []);\n\n  console.log(revenueInfo);\n  console.log(customerInfo);\n  console.log(vendorInfo);\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Treasury Application</h1>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Revenue\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(getTotalValue(revenueInfo))}\n            total={numeral(getTotalValue(revenueInfo)).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Customers\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(getTotalValue(customerInfo))}\n            total={numeral(getTotalValue(customerInfo)).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Vendors\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(getTotalValue(vendorInfo))}\n            total={numeral(getTotalValue(vendorInfo)).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Revenue by Regions</h3>\n            <Table countries={tableData} />\n            <h3> Revenue Chart </h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}