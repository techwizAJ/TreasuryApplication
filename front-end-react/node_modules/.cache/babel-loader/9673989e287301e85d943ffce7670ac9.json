{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arihant\\\\Desktop\\\\git projects\\\\react-covid-tracker-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst getTotalValue = data => {\n  var total = 0;\n\n  for (let key in data) {\n    total = total + data[key];\n  }\n\n  return total;\n};\n\nconst App = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  const [revenueInfo, setRevenueInfo] = useState({});\n  const [customerInfo, setCustomerInfo] = useState({});\n  const [vendorInfo, setVendorInfo] = useState({});\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"revenue\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(4);\n  const [region, setRegion] = useState({\n    na: [47.1164, 101.2996],\n    sa: [8.7832, 55.4915],\n    europe: [54.526, 15.2551],\n    africa: [8.7832, 34.5085],\n    apac: [1.9851, 32.5344]\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/invoice/totalRevenue/region\").then(response => response.json()).then(data => {\n      setRevenueInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/customers/countOfCustomerBasedOnRegion\").then(response => response.json()).then(data => {\n      setCustomerInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/vendors/countOfVendorBasedOnRegion\").then(response => response.json()).then(data => {\n      setVendorInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    setMapCountries([region, revenueInfo, customerInfo, vendorInfo]);\n  }, [region, revenueInfo, customerInfo, vendorInfo]);\n  console.log(revenueInfo);\n  console.log(customerInfo);\n  console.log(vendorInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Treasury Application\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"revenue\"),\n    title: \"Revenue\",\n    active: casesType === \"revenue\",\n    cases: prettyPrintStat(getTotalValue(revenueInfo)),\n    total: numeral(getTotalValue(revenueInfo)).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"customers\"),\n    title: \"Customers\",\n    active: casesType === \"customers\",\n    cases: prettyPrintStat(getTotalValue(customerInfo)),\n    total: numeral(getTotalValue(customerInfo)).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"vendors\"),\n    title: \"Vendors\",\n    active: casesType === \"vendors\",\n    cases: prettyPrintStat(getTotalValue(vendorInfo)),\n    total: numeral(getTotalValue(vendorInfo)).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    countries: mapCountries,\n    casesType: casesType,\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Revenue by Regions\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \" Revenue Chart \")))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Arihant/Desktop/git projects/react-covid-tracker-master/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","LineGraph","Table","sortData","prettyPrintStat","numeral","Map","getTotalValue","data","total","key","App","countryInfo","setCountryInfo","revenueInfo","setRevenueInfo","customerInfo","setCustomerInfo","vendorInfo","setVendorInfo","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","region","setRegion","na","sa","europe","africa","apac","fetch","then","response","json","console","log","e","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst getTotalValue = (data) => {\n  var total = 0;\n  for (let key in data) {\n    total = total + data[key];\n  }\n  return total;\n};\n\nconst App = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  const [revenueInfo, setRevenueInfo] = useState({});\n  const [customerInfo, setCustomerInfo] = useState({});\n  const [vendorInfo, setVendorInfo] = useState({});\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"revenue\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(4);\n  const [region, setRegion] = useState({\n    na: [47.1164, 101.2996],\n    sa: [8.7832, 55.4915],\n    europe: [54.526, 15.2551],\n    africa: [8.7832, 34.5085],\n    apac: [1.9851, 32.5344],\n  });\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/invoice/totalRevenue/region\")\n      .then((response) => response.json())\n      .then((data) => {\n        setRevenueInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/customers/countOfCustomerBasedOnRegion\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCustomerInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/vendors/countOfVendorBasedOnRegion\")\n      .then((response) => response.json())\n      .then((data) => {\n        setVendorInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    setMapCountries([region, revenueInfo, customerInfo, vendorInfo]);\n  }, [region, revenueInfo, customerInfo, vendorInfo]);\n\n  console.log(revenueInfo);\n  console.log(customerInfo);\n  console.log(vendorInfo);\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Treasury Application</h1>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"revenue\")}\n            title=\"Revenue\"\n            active={casesType === \"revenue\"}\n            cases={prettyPrintStat(getTotalValue(revenueInfo))}\n            total={numeral(getTotalValue(revenueInfo)).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"customers\")}\n            title=\"Customers\"\n            active={casesType === \"customers\"}\n            cases={prettyPrintStat(getTotalValue(customerInfo))}\n            total={numeral(getTotalValue(customerInfo)).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"vendors\")}\n            title=\"Vendors\"\n            active={casesType === \"vendors\"}\n            cases={prettyPrintStat(getTotalValue(vendorInfo))}\n            total={numeral(getTotalValue(vendorInfo)).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Revenue by Regions</h3>\n            <Table countries={tableData} />\n            <h3> Revenue Chart </h3>\n            {/* <LineGraph casesType={casesType} /> */}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}